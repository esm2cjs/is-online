{
  "version": 3,
  "sources": ["../esm/index.js"],
  "sourcesContent": ["import os from 'node:os';\nimport got, {CancelError} from '@esm2cjs/got';\nimport publicIp from '@esm2cjs/public-ip';\nimport pAny from '@esm2cjs/p-any';\nimport pTimeout from '@esm2cjs/p-timeout';\n\nconst appleCheck = options => {\n\tconst gotPromise = got('https://captive.apple.com/hotspot-detect.html', {\n\t\ttimeout: {\n\t\t\trequest: options.timeout,\n\t\t},\n\t\tdnsLookupIpVersion: options.ipVersion,\n\t\theaders: {\n\t\t\t'user-agent': 'CaptiveNetworkSupport/1.0 wispr',\n\t\t},\n\t});\n\n\tconst promise = (async () => {\n\t\ttry {\n\t\t\tconst {body} = await gotPromise;\n\t\t\tif (!body || !body.includes('Success')) {\n\t\t\t\tthrow new Error('Apple check failed');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof CancelError)) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t})();\n\n\tpromise.cancel = gotPromise.cancel;\n\n\treturn promise;\n};\n\n// Note: It cannot be `async`` as then it looses the `.cancel()` method.\nexport default function isOnline(options) {\n\toptions = {\n\t\ttimeout: 5000,\n\t\tipVersion: 4,\n\t\t...options,\n\t};\n\n\tif (Object.values(os.networkInterfaces()).flat().every(({internal}) => internal)) {\n\t\treturn false;\n\t}\n\n\tif (![4, 6].includes(options.ipVersion)) {\n\t\tthrow new TypeError('`ipVersion` must be 4 or 6');\n\t}\n\n\tconst publicIpFunctionName = options.ipVersion === 4 ? 'v4' : 'v6';\n\n\tconst queries = [];\n\n\tconst promise = pAny([\n\t\t(async () => {\n\t\t\tconst query = publicIp[publicIpFunctionName](options);\n\t\t\tqueries.push(query);\n\t\t\tawait query;\n\t\t\treturn true;\n\t\t})(),\n\t\t(async () => {\n\t\t\tconst query = publicIp[publicIpFunctionName]({...options, onlyHttps: true});\n\t\t\tqueries.push(query);\n\t\t\tawait query;\n\t\t\treturn true;\n\t\t})(),\n\t\t(async () => {\n\t\t\tconst query = appleCheck(options);\n\t\t\tqueries.push(query);\n\t\t\tawait query;\n\t\t\treturn true;\n\t\t})(),\n\t]);\n\n\treturn pTimeout(promise, options.timeout).catch(() => {\n\t\tfor (const query of queries) {\n\t\t\tquery.cancel();\n\t\t}\n\n\t\treturn false;\n\t});\n\n\t// TODO: Use this instead when supporting AbortController.\n\t// try {\n\t// \treturn await pTimeout(promise, options.timeout);\n\t// } catch {\n\t// \tfor (const query of queries) {\n\t// \t\tquery.cancel();\n\t// \t}\n\n\t// \treturn false;\n\t// }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe;AACf,iBAA+B;AAC/B,uBAAqB;AACrB,mBAAiB;AACjB,uBAAqB;AAErB,MAAM,aAAa,aAAW;AAC7B,QAAM,iBAAa,WAAAA,SAAI,iDAAiD;AAAA,IACvE,SAAS;AAAA,MACR,SAAS,QAAQ;AAAA,IAClB;AAAA,IACA,oBAAoB,QAAQ;AAAA,IAC5B,SAAS;AAAA,MACR,cAAc;AAAA,IACf;AAAA,EACD,CAAC;AAED,QAAM,WAAW,YAAY;AAC5B,QAAI;AACH,YAAM,EAAC,KAAI,IAAI,MAAM;AACrB,UAAI,CAAC,QAAQ,CAAC,KAAK,SAAS,SAAS,GAAG;AACvC,cAAM,IAAI,MAAM,oBAAoB;AAAA,MACrC;AAAA,IACD,SAAS,OAAP;AACD,UAAI,EAAE,iBAAiB,yBAAc;AACpC,cAAM;AAAA,MACP;AAAA,IACD;AAAA,EACD,GAAG;AAEH,UAAQ,SAAS,WAAW;AAE5B,SAAO;AACR;AAGe,SAAR,SAA0B,SAAS;AACzC,YAAU;AAAA,IACT,SAAS;AAAA,IACT,WAAW;AAAA,IACX,GAAG;AAAA,EACJ;AAEA,MAAI,OAAO,OAAO,eAAAC,QAAG,kBAAkB,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,EAAC,SAAQ,MAAM,QAAQ,GAAG;AACjF,WAAO;AAAA,EACR;AAEA,MAAI,CAAC,CAAC,GAAG,CAAC,EAAE,SAAS,QAAQ,SAAS,GAAG;AACxC,UAAM,IAAI,UAAU,4BAA4B;AAAA,EACjD;AAEA,QAAM,uBAAuB,QAAQ,cAAc,IAAI,OAAO;AAE9D,QAAM,UAAU,CAAC;AAEjB,QAAM,cAAU,aAAAC,SAAK;AAAA,KACnB,YAAY;AACZ,YAAM,QAAQ,iBAAAC,QAAS,sBAAsB,OAAO;AACpD,cAAQ,KAAK,KAAK;AAClB,YAAM;AACN,aAAO;AAAA,IACR,GAAG;AAAA,KACF,YAAY;AACZ,YAAM,QAAQ,iBAAAA,QAAS,sBAAsB,EAAC,GAAG,SAAS,WAAW,KAAI,CAAC;AAC1E,cAAQ,KAAK,KAAK;AAClB,YAAM;AACN,aAAO;AAAA,IACR,GAAG;AAAA,KACF,YAAY;AACZ,YAAM,QAAQ,WAAW,OAAO;AAChC,cAAQ,KAAK,KAAK;AAClB,YAAM;AACN,aAAO;AAAA,IACR,GAAG;AAAA,EACJ,CAAC;AAED,aAAO,iBAAAC,SAAS,SAAS,QAAQ,OAAO,EAAE,MAAM,MAAM;AACrD,eAAW,SAAS,SAAS;AAC5B,YAAM,OAAO;AAAA,IACd;AAEA,WAAO;AAAA,EACR,CAAC;AAYF;",
  "names": ["got", "os", "pAny", "publicIp", "pTimeout"]
}
